1.vue create "文件名"，创建项目
2.在根目录下创建vue.config.js,并配置该文件,详情见：https://blog.csdn.net/Allen_Fei_/article/details/82691420
3.dist为打包后的文件夹
4.任何放置在 public 文件夹的静态资源都会被简单的复制，而不经过 webpack。你需要通过绝对路径来引用它们。


5.静态资源可以通过两种方式进行处理：
在 JavaScript 被导入或在 template/CSS 中通过相对路径被引用。这类引用会被 webpack 处理。s
放置在 public 目录下或通过绝对路径被引用。这类资源将会直接被拷贝，而不会经过 webpack 的处理。

6.注意我们推荐将资源作为你的模块依赖图的一部分导入，这样它们会通过 webpack 的处理并获得如下好处：
脚本和样式表会被压缩且打包在一起，从而避免额外的网络请求。
文件丢失会直接在编译时报错，而不是到了用户端才产生 404 错误。
最终生成的文件名包含了内容哈希，因此你不必担心浏览器会缓存它们的老版本。

7.环境变量：参考：https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F
.env.[mode]         # 只在指定的模式中被载入

一个环境文件只包含环境变量的“键=值”对：例;.env.test2文件
NODE_ENV=production
VUE_APP_MODE=test2

被载入的变量将会对 vue-cli-service 的所有命令、插件和依赖可用。

8.在客户端侧代码中使用环境变量
只有以 VUE_APP_ 开头的变量会被 webpack.DefinePlugin 静态嵌入到客户端侧的包中。
你可以在应用的代码中这样访问它们：process.env.VUE_APP_MODE
